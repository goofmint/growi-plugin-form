/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface GrowiForm {
        /**
          * The parametar1
         */
        "code": string;
        "message": string;
        /**
          * The name
         */
        "name": string;
        "path": string;
        "role": string;
        "submit": string;
    }
}
export interface GrowiFormCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLGrowiFormElement;
}
declare global {
    interface HTMLGrowiFormElementEventMap {
        "saved": string;
    }
    interface HTMLGrowiFormElement extends Components.GrowiForm, HTMLStencilElement {
        addEventListener<K extends keyof HTMLGrowiFormElementEventMap>(type: K, listener: (this: HTMLGrowiFormElement, ev: GrowiFormCustomEvent<HTMLGrowiFormElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLGrowiFormElementEventMap>(type: K, listener: (this: HTMLGrowiFormElement, ev: GrowiFormCustomEvent<HTMLGrowiFormElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLGrowiFormElement: {
        prototype: HTMLGrowiFormElement;
        new (): HTMLGrowiFormElement;
    };
    interface HTMLElementTagNameMap {
        "growi-form": HTMLGrowiFormElement;
    }
}
declare namespace LocalJSX {
    interface GrowiForm {
        /**
          * The parametar1
         */
        "code"?: string;
        "message"?: string;
        /**
          * The name
         */
        "name"?: string;
        "onSaved"?: (event: GrowiFormCustomEvent<string>) => void;
        "path"?: string;
        "role"?: string;
        "submit"?: string;
    }
    interface IntrinsicElements {
        "growi-form": GrowiForm;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "growi-form": LocalJSX.GrowiForm & JSXBase.HTMLAttributes<HTMLGrowiFormElement>;
        }
    }
}
